version: '3'
services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: always
    env_file: ./database/postgres.env
    volumes:
      - ./database/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d database" ]
      interval: 5s
      timeout: 15s
      retries: 15
  

 # db_test:
 #   build:
 #     context: ./database
 #     dockerfile: Dockerfile
 #   restart: always
 #   env_file: ./database/test_db.env
 #   volumes:
 #     - ./database/pgdata_test:/var/lib/postgresql/data
 #   ports:
 #     - "5433:5432"
 #   healthcheck:
 #     test: [ "CMD-SHELL", "pg_isready -U backend_user -d test_db" ]
 #     interval: 5s
 #     timeout: 15s
 #     retries: 15
 #   command: ["sh", "-c", "if [ \"$START_TEST_DB\" == \"true\" ]; then /docker-entrypoint.sh postgres && sleep infinity; else exit 0; fi"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
#      db_test:
#        condition: service_healthy
    volumes:
      - ./backend:/app/backend

  dbeaver:
    image: dbeaver/cloudbeaver:latest
    ports:
      - "8978:8978"
    depends_on:
      - db
#      - db_test

  #frontend:
  #  build:
  #    context: ./frontend
  #    dockerfile: Dockerfile
  #  ports:
  #    - "3000:3000"
  #  environment:
  #    - port=3000
  #  depends_on:
  #    - backend
  #  volumes:
  #    - ./frontend/:/app/
